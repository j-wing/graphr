{"version":3,"sources":["js/es6/algorithms/dijkstras.js"],"names":[],"mappings":"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","file":"js/es6/algorithms/dijkstras.js","sourcesContent":["import * as algos from \"dist/algorithms/algorithmState\";\nimport {DijkstraInfobox} from \"dist/infobox\";\nimport * as heapq from \"js/heapq\";\n\nexport default class DijkstraState extends algos.AlgorithmState {\n    constructor(graph) {\n        super(graph);\n        this.queue = graph.vertices.slice();\n        this.dist = new Map();\n        this.infobox = new DijkstraInfobox(this);\n\n        for (let v of graph.vertices) {\n            this.dist[v] = Infinity;\n        }\n\n        this.lastEdge = null;\n        this.lastNode = null;\n    }\n\n    requiresStartNode() {\n        return true;\n    }\n\n    requiresEndNode() {\n        return true;\n    }\n\n    setStartNode(node) {\n        super(node);\n        this.dist[node] = 0;\n        heapq.heapify(this.queue, this.heapCmp.bind(this));\n        this.infobox.update();\n    }\n\n    heapCmp(a, b) {\n        if (this.dist[a] > this.dist[b]) {\n            return 1\n        }\n        else if (this.dist[a] == this.dist[b]) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n\n\n    next() {\n        if (this.queue.length == 0) {\n            this.isFinished = true;\n            this.infobox.update();\n            return;\n        }\n\n        var current = heapq.pop(this.queue, this.heapCmp.bind(this));\n        this.graph.setSelectedNode(current);\n        \n        var edges = this.graph.getEdgesFrom(current);\n        edges.reverse();\n\n        for (var edge of edges) {\n            if (this.dist[edge.toNode] > this.dist[current] + edge.weight) {\n                this.dist[edge.toNode] = this.dist[current] + edge.weight;\n            this.infobox.update();\n            }\n        }\n        heapq.heapify(this.queue, this.heapCmp.bind(this));\n    }\n\n    previous() {\n\n    }\n} "]}