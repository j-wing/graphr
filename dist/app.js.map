{"version":3,"sources":["js/es6/app.js"],"names":[],"mappings":"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","file":"js/es6/app.js","sourcesContent":["import {Node} from \"dist/node\"\nimport {Edge} from \"dist/edge\"\nimport {Graph} from \"dist/graph\"\nimport {EventHandler} from \"dist/event_handler\"\nimport {Sidebar} from \"dist/sidebar\"\nclass UserOptions {\n    /* Class that manages options that the user can toggle. */\n\n    constructor() {\n        this._options = {\n            \"GRAPH_DIRECTED\":true,\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    setOption(option, value) {\n        this._options[option] = value;\n    }\n}\n\nclass GraphrApp {\n    constructor() {\n        this.canvas = $(\"canvas\");\n        this.ctx = this.canvas[0].getContext(\"2d\");\n        this.ctx.translate(0.5, 0.5)\n        this.setCanvasSize();\n        this.options = new UserOptions();\n        this.sidebar = new Sidebar();\n        this.sidebar.getAlgorithmElements().on(\"click\", this.handleAlgorithmClick.bind(this));\n\n        var bounds = [\n        \tthis.canvasWidth,\n        \tthis.canvasHeight\n        ]\n\n        this.graph = new Graph(this.ctx, bounds, true);\n    }\n\n    run() {\n        // window.requestAnimationFrame(() =>\n        //     this.renderLoop()\n        // );\n\t\tthis.render()\n    }\n\n    handleAlgorithmClick(e) {\n        this.graph.beginAlgorithm(e.target.dataset.algorithmName);\n        this.graph.executingAlgorithm.next();\n        this.graph.executingAlgorithm.setAutoStepInterval(1000);\n    }\n\n    setCanvasSize() {\n        this.canvasWidth = window.innerWidth;\n        this.canvasHeight = window.innerHeight;\n        this.canvas.attr(\"height\", this.canvasHeight).attr(\"width\", this.canvasWidth);\n    }\n\n    render() {\n        this.ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.ctx.fillStyle = \"lightblue\";\n        this.ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n        // this.graph.render(this.ctx);\n\n        // window.requestAnimationFrame(() =>\n        //     this.renderLoop()\n        // );\n    }\n\n    collidesWithAny(otherNode) {\n    \t// Takes O(|v|) time every time we add a new vertex\n\n    \tfor (var node of this.graph.vertices) {\n    \t\tif (node.collidesWith(otherNode)) {\n    \t\t\treturn true\n    \t\t}\n    \t}\n\n    \treturn false\n    }\n}\n\n$(document).ready(function() {\n\n    window.App = new GraphrApp();\n    var graph = App.graph\n\n\t// Setup event handler\n\tvar latencies = {\n\t\t'longpress': 0\n\t}\n\tvar eh = new EventHandler(\"#canvas\", latencies)\n\tgraph.eventHandler = eh\n\tvar nextNodeValue = 1\n\n    var canvas = document.getElementById(\"canvas\")\n\n\t// register handlers\n\tcanvas.addEventListener('mousedown', e =>\n\t\teh.mousedownHandler(e)\n\t)\n\tcanvas.addEventListener('mouseup', e =>\n\t\teh.mouseupHandler(e)\n\t)\n\n\t// register custom handlers\n\tcanvas.addEventListener('longpress', function() {\n\t\tvar newNode = new Node(nextNodeValue, eh.mousePosX, eh.mousePosY)\n\t\tif (!App.collidesWithAny(newNode)) {\n\t\t\tgraph.addNode(newNode)\n\t\t\tnextNodeValue += 1\n\t\t\tconsole.log(\"Success!\")\n\t\t}\n\t}, false)\n\n\tcanvas.addEventListener('edgecreated', e => {\n\t\tvar fromNode = e.detail.start\n\t\tvar toNode = e.detail.end\n        graph.addEdge(fromNode, toNode, _.random(1, 100));\n\t})\n\n    // console.log(graph.getEdgesFrom(graph.getVertex(0)))\n\n\n    App.run();\n})"]}